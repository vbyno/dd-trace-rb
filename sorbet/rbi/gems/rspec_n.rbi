# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/rspec_n/all/rspec_n.rbi
#
# rspec_n-1.3.0

module RspecN
end
module RspecN::TimeHelpers
  def convert_seconds_to_hms(total_seconds); end
end
class Array
  def to_sentence(word_connector: nil, two_word_connector: nil, last_word_connector: nil); end
end
class String
  def all_digits?; end
  def remove_color; end
end
class RspecN::BadOption < StandardError
  def initialize(msg = nil); end
  def message; end
end
class RspecN::Input
  def command; end
  def command=(arg0); end
  def determine_command; end
  def determine_iterations; end
  def determine_log_path; end
  def determine_spec_path; end
  def guessed_command; end
  def initialize(options, args); end
  def iterations; end
  def iterations=(arg0); end
  def log_path; end
  def log_path=(arg0); end
  def project_is_rails_based?; end
  def project_uses_rspec_starter?; end
  def should_append_order?(command); end
  def stop_fast; end
  def stop_fast=(arg0); end
  def validate_order; end
  def write_files; end
  def write_files=(arg0); end
  def write_files?; end
end
class RspecN::Runner < Cri::CommandRunner
  def avg_duration_seconds; end
  def command; end
  def display_intro; end
  def initialize(options, args); end
  def initialize_runs; end
  def input; end
  def iterations; end
  def run_tests; end
  def runs; end
  def start; end
  def total_duration_seconds; end
  def total_failed; end
  def total_passed; end
  def total_skipped; end
end
class RspecN::Run
  def duration_seconds; end
  def duration_seconds=(arg0); end
  def failed?; end
  def finalize_duration_seconds; end
  def finalize_has_warnings; end
  def finalize_result_count_string; end
  def finalize_seed; end
  def finalize_status_string; end
  def finish_time; end
  def finish_time=(arg0); end
  def formatted_finish_time(format); end
  def formatted_start_time(format); end
  def go(command); end
  def has_warnings?; end
  def initialize(iteration:); end
  def iteration; end
  def iteration=(arg0); end
  def passed?; end
  def result_count_string; end
  def result_count_string=(arg0); end
  def rspec_status; end
  def rspec_status=(arg0); end
  def rspec_stderr; end
  def rspec_stderr=(arg0); end
  def rspec_stdout; end
  def rspec_stdout=(arg0); end
  def seed; end
  def seed=(arg0); end
  def skip; end
  def skipped?; end
  def start_clock; end
  def start_time; end
  def start_time=(arg0); end
  def status_string; end
  def status_string=(arg0); end
  def stop_clock; end
end
module RspecN::Formatters
end
class RspecN::Formatters::FileFormatter
  def delete_all_files; end
  def initialize(runner:); end
  def write(run, command); end
  include RspecN::TimeHelpers
end
class RspecN::Formatters::TableFormatter
  def columns; end
  def columns=(arg0); end
  def duration_field(run); end
  def initialize(runner:); end
  def max_column_width_for(name); end
  def observe; end
  def pad_field(column_name, value); end
  def padded_header_column_label(name, width); end
  def padded_header_column_labels; end
  def result_color_symbol(run); end
  def result_count_field(run); end
  def seed_field(run); end
  def show_post_run_info(run); end
  def show_pre_run_info(run); end
  def write_conclusion; end
  def write_table_header; end
  include RspecN::TimeHelpers
end
